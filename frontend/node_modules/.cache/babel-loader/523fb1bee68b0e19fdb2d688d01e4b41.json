{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAYMENT_FAIL, ORDER_PAYMENT_REQUEST, ORDER_PAYMENT_SUCCESS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (e) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: e.response && e.response.data.message ? e.response.data.message : e.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  const {\n    id\n  } = orderId;\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    const message = e.response && e.response.data.message ? e.response.data.message : e.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAYMENT_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAYMENT_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    const message = e.response && e.response.data.message ? e.response.data.message : e.message;\n    dispatch({\n      type: ORDER_PAYMENT_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/wamp64/www/AMAZONA/amazone/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAYMENT_FAIL","ORDER_PAYMENT_REQUEST","ORDER_PAYMENT_SUCCESS","axios","CART_EMPTY","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","e","response","message","detailsOrder","orderId","id","get","payOrder","paymentResult","put","_id"],"mappings":"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","sourcesContent":["import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAYMENT_FAIL, ORDER_PAYMENT_REQUEST, ORDER_PAYMENT_SUCCESS\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport {CART_EMPTY} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try {\r\n        const {userSignin: {userInfo}} = getState();\r\n        const {data} = await axios.post('api/orders', order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n    } catch (e) {\r\n        dispatch({type: ORDER_CREATE_FAIL,\r\n            payload: e.response && e.response.data.message\r\n                ? e.response.data.message\r\n                : e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\r\n    const {userSignin: {userInfo}} = getState();\r\n    const {id} = orderId;\r\n    try {\r\n        const {data} = await axios.get(`/api/orders/${id}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data})\r\n    } catch (e) {\r\n        const message = e.response && e.response.data.message\r\n            ? e.response.data.message\r\n            : e.message;\r\n        dispatch({type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_PAYMENT_REQUEST, payload: {order, paymentResult}});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try {\r\n        const {data} = await axios.put(`/api/orders/${order._id}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({type: ORDER_PAYMENT_SUCCESS, payload: data})\r\n    } catch (e) {\r\n        const message = e.response && e.response.data.message\r\n            ? e.response.data.message\r\n            : e.message;\r\n        dispatch({type: ORDER_PAYMENT_FAIL, payload: message});\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}