{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST } from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('api/orders', order, {\n      headers: {\n        Authorisation: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (e) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: e.response && e.response.data.message ? e.response.data.message : e.message\n    });\n  }\n};\nexport const detailsOrder = orderId => (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: data\n  });\n\n  try {} catch (e) {\n    const message = e.response && e.response.data.message ? e.response.data.message : e.message;\n  }\n};","map":{"version":3,"sources":["C:/wamp64/www/AMAZONA/amazone/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","axios","CART_EMPTY","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorisation","token","localStorage","removeItem","e","response","message","detailsOrder","orderId"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,QAKO,6BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,4BAAzB;AAGA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAET,oBAAP;AAA6BU,IAAAA,OAAO,EAAEJ;AAAtC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACK,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AAAb,QAA2BJ,QAAQ,EAAzC;AACA,UAAM;AAACK,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBR,KAAzB,EAAgC;AACjDS,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADnC;AADwC,KAAhC,CAArB;AAKAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,oBAAP;AAA6BS,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA3C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEL;AAAP,KAAD,CAAR;AACAc,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,GAVD,CAUE,OAAOC,CAAP,EAAU;AACRb,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEV,iBAAP;AACLW,MAAAA,OAAO,EAAEU,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWR,IAAX,CAAgBS,OAA9B,GACHF,CAAC,CAACC,QAAF,CAAWR,IAAX,CAAgBS,OADb,GAEHF,CAAC,CAACE;AAHH,KAAD,CAAR;AAKH;AACJ,CAnBM;AAqBP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAC7DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEP,qBAAP;AAA8BQ,IAAAA,OAAO,EAAEG;AAAvC,GAAD,CAAR;;AACA,MAAI,CAEH,CAFD,CAEE,OAAOO,CAAP,EAAU;AACR,UAAME,OAAO,GAAGF,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWR,IAAX,CAAgBS,OAA9B,GACVF,CAAC,CAACC,QAAF,CAAWR,IAAX,CAAgBS,OADN,GAEVF,CAAC,CAACE,OAFR;AAGH;AACJ,CATM","sourcesContent":["import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport {CART_EMPTY} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try {\r\n        const {userSignin: {userInfo}} = getState();\r\n        const {data} = await axios.post('api/orders', order, {\r\n            headers: {\r\n                Authorisation: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n    } catch (e) {\r\n        dispatch({type: ORDER_CREATE_FAIL,\r\n            payload: e.response && e.response.data.message\r\n                ? e.response.data.message\r\n                : e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const detailsOrder = (orderId) => (dispatch, getState) => {\r\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: data});\r\n    try {\r\n\r\n    } catch (e) {\r\n        const message = e.response && e.response.data.message\r\n            ? e.response.data.message\r\n            : e.message;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}