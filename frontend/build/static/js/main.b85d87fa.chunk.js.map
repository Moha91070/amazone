{"version":3,"sources":["constants/cartConstants.js","actions/cartActions.js","components/MessageBox.js","screens/CartScreen.js","components/Rating.js","components/Product.js","components/LoadingBox.js","constants/productConstants.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","App.js","serviceWorker.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","index.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","productId","qty","dispatch","getState","a","axios","get","data","console","log","product","type","payload","name","image","price","countInStock","_id","localStorage","setItem","JSON","stringify","cart","cartItems","MessageBox","props","className","variant","children","CartScreen","location","useLocation","useParams","id","search","Number","split","useSelector","state","useDispatch","useEffect","removeFromCartHandler","removeFromCart","length","to","map","item","src","alt","value","onChange","e","target","Array","keys","x","onClick","reduce","c","href","disabled","Rating","rating","numReviews","Product","LoadingBox","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","HomeScreen","productList","loading","error","products","message","ProductScreen","useState","setQty","productDetails","response","detailsProduct","description","App","path","element","exact","Boolean","window","hostname","match","initialState","getItem","parse","reducer","combineReducers","action","existItem","find","filter","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b85d87fa.chunk.js","sourcesContent":["export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';","import {CART_ADD_ITEM, CART_REMOVE_ITEM} from \"../constants/cartConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (productId, qty) =>async(dispatch, getState) =>{\r\n    const {data} = await axios.get(`/api/products/${productId}`);\r\n    console.log(data.product);\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            name: data.product.name,\r\n            image: data.product.image,\r\n            price: data.product.price,\r\n            countInStock: data.product.countInStock,\r\n            product: data.product._id,\r\n            qty,\r\n        },\r\n    });\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (productId) => (dispatch, getState) =>{\r\n    dispatch({type: CART_REMOVE_ITEM, payload: productId});\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}","export default function MessageBox(props){\r\n\r\n    return (\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport {Link, useLocation, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addToCart, removeFromCart} from \"../actions/cartActions\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function CartScreen(props) {\r\n    const location = useLocation();\r\n    const { id } = useParams();\r\n    const productId = id;\r\n    const qty = location.search \r\n    ? Number(location.search.split('=')[1]) \r\n    : 1;\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n    const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    return (\r\n        <div className=\"row top\">\r\n            <div className=\"col-2\">\r\n                <h1>Shopping cart</h1>\r\n                {cartItems.length === 0\r\n                ?<MessageBox>Cart is empty. <Link to=\"/\"> Go shopping</Link>\r\n                </MessageBox>\r\n                : (\r\n                    <ul>\r\n                        {\r\n                            cartItems.map((item) => (\r\n                                <li key={item.product}>\r\n                                    <div className=\"row\">\r\n                                        <div>\r\n                                            <img src={item.image} alt={item.name} className=\"small\"/>\r\n                                        </div>\r\n                                        <div className=\"min-30\">\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n                                        <div>\r\n                                            <select\r\n                                                value={item.qty}\r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToCart(item.product, Number(e.target.value)\r\n                                                        ))\r\n                                                }>\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map(\r\n                                                        x => (\r\n                                                            <option key={x + 1} value={x +1}>{x +1}</option>\r\n                                                        )\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                        <div>\r\n                                           ${item.price}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type=\"button\" onClick={() => removeFromCartHandler(item.product)}>\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                    )}\r\n            </div>\r\n            <div className=\"col-1\">\r\n                <div className=\"card card-body\">\r\n                    <ul>\r\n                        <li>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\r\n                                ${cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n                            </h2>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/signin?redirect=shipping\">\r\n                            <button type=\"button\"\r\n                                    className=\"primary block\"\r\n                                    disabled={cartItems.length === 0}\r\n                            >\r\n                                Proceed to checkout\r\n                            </button>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Rating(props){\r\n    const {rating, numReviews} = props;\r\n\r\n    return(\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i \r\n                className = { rating >=1 \r\n                ? \"fa fa-star\" \r\n                : rating >= 0.5 \r\n                ? \"fa fa-star-half-o\"\r\n                : \"fa fa-star-o\"} \r\n                ></i>\r\n            </span>\r\n            <span>\r\n            <i \r\n                className = { rating >=2 \r\n                ? \"fa fa-star\" \r\n                : rating >= 1.5 \r\n                ? \"fa fa-star-half-o\"\r\n                : \"fa fa-star-o\"} \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i \r\n                className = { rating >=3\r\n                ? \"fa fa-star\" \r\n                : rating >= 2.5 \r\n                ? \"fa fa-star-half-o\"\r\n                : \"fa fa-star-o\"} \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i \r\n                className = { rating >=4 \r\n                ? \"fa fa-star\" \r\n                : rating >= 3.5 \r\n                ? \"fa fa-star-half-o\"\r\n                : \"fa fa-star-o\"} \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i \r\n                className = { rating >=5 \r\n                ? \"fa fa-star\" \r\n                : rating >= 4.5 \r\n                ? \"fa fa-star-half-o\"\r\n                : \"fa fa-star-o\"} \r\n                ></i>\r\n            </span>\r\n            <span>{numReviews + ' reviews'}</span>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Rating from \"./Rating\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Product(props) {\r\n    const {product} = props;\r\n\r\n    return (\r\n        <div key={product._id} className=\"card\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <img className=\"medium\" src={product.image} alt={product.name}/>\r\n            </Link>\r\n            <div className=\"card-body\">\r\n                <Link to={`/product/${product._id}`}>\r\n                    <h2>{product.name}</h2>\r\n                </Link>\r\n                <Rating rating={product.rating} numReviews={product.numReviews}/>\r\n                <div className=\"price\">\r\n                    ${product.price}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport default function LoadingBox(){\r\n    return (\r\n        <div>\r\n            <i className=\"fa fa-spinner fa-spin\"></i> Loading ...\r\n        </div>\r\n    );\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';","import React, { useEffect } from 'react';\r\nimport Product from '../components/Product';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products } = productList;\r\n  console.log(products);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n    }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? <LoadingBox/>\r\n      : error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      :( \r\n        <div className=\"row center\">\r\n          {products.products.map((product) => (\r\n          <Product key={product._id} product={product}/>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n    );\r\n}\r\nexport default HomeScreen","import axios from \"axios\";\r\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\"\r\n\r\nexport const listProducts = () => async (dispatch) =>{\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const {data} = await axios.get('/api/products');\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    } catch(e){\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: e.message})\r\n    }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) =>{\r\n    dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n    try {\r\n        const {data} = await axios.get(`/api/products/${productId}`);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data})\r\n    } catch(e) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: e.response && e.response.data.message \r\n            ? e.response.data.message : e.message})\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Rating from \"../components/Rating\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {detailsProduct} from \"../actions/productActions\";\r\n\r\nexport default function ProductScreen(props){\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const productId = id;\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n    console.log(product)\r\n    \r\n    useEffect(() =>{\r\n        dispatch(detailsProduct(productId));\r\n    }, [dispatch, productId]);\r\n\r\n    return (\r\n        <div>\r\n        {loading ? <LoadingBox/>\r\n        : error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        :( \r\n            <div>\r\n            <Link to=\"/\">Retour</Link>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <img className=\"large\" src={product.product.image} alt={product.product.name}/>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                    <ul>\r\n                        <li>\r\n                            <h1>{product.product.name}</h1>\r\n                        </li>\r\n                        <li>\r\n                            <Rating \r\n                                rating={product.product.rating}\r\n                                numReviews={product.product.numReviews}\r\n                            />\r\n                        </li>\r\n                        <li>Price: {product.product.price}</li>\r\n                        <li>Description:\r\n                            <p>{product.product.description}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                    <div className=\"card card-body\">\r\n                        <ul>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Price</div>\r\n                                    <div className=\"price\">${product.product.price}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Status</div>\r\n                                    <div>{product.product.countInStock > 0?<span className=\"success\">En stock</span>:\r\n                                    <span className=\"danger\">Rupture de stock</span>}</div>\r\n                                </div>\r\n                            </li>\r\n                            {\r\n                                product.product.countInStock > 0 && (\r\n                                    <>\r\n                                    <li>\r\n                                        <div className=\"row\">\r\n                                            <div>Qty</div>\r\n                                            <div>\r\n                                                <select value={qty} onChange={e => setQty(e.target.value)}>\r\n                                                    {\r\n                                                        [...Array(product.product.countInStock).keys()].map(\r\n                                                            x => (\r\n                                                            <option key={x + 1} value={x +1}>{x +1}</option>\r\n                                                            )\r\n                                                        )\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href={`/cart/${productId}?qty=${qty}`}>\r\n                                            <button className=\"primary block\">\r\n                                                Ajouter au panier                                            \r\n                                            </button>\r\n                                        </a>\r\n                                    </li>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )}\r\n      </div>\r\n   \r\n    )\r\n}   ","import React from 'react'\r\nimport {BrowserRouter, Link, Route, Routes} from \"react-router-dom\";\r\nimport CartScreen from './screens/CartScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction App() {\r\n  const cart = useSelector(state => state.cart);\r\n  const {cartItems} = cart;\r\n\r\n  return (\r\n      <BrowserRouter>\r\n      <div className=\"grid-container\">\r\n        <header className=\"row\">\r\n          <div>\r\n            <Link className=\"brand\" to=\"/\">\r\n              amazone\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Link to=\"/cart/:id\">Cart\r\n              {cartItems.length > 0 && (<span className=\"badge\">{cartItems.length}</span> )}\r\n            </Link>\r\n            <Link to=\"/signin\">Sign In</Link>\r\n        </div>\r\n        </header>\r\n        <main>\r\n          <Routes>  \r\n          <Route path=\"/cart/:id\" element={<CartScreen/>}/>\r\n          <Route path=\"/product/:id\" element={<ProductScreen/>}/>\r\n          <Route exact path=\"/\" element={<HomeScreen/>}/>\r\n          </Routes>\r\n        </main>\r\n        <footer className=\"row center\">All right reserved</footer>\r\n      </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { productDetailsreducer, productListReducer } from './reducers/productReducers';\r\nimport {cartReducer} from \"./reducers/cartReducers\";\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : []\r\n    }\r\n};\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsreducer,\r\n    cart: cartReducer\r\n})\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;","import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { loading: true, products: [] }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsreducer = (state = { product:{}, loading: true}, action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                };\r\n            } else {\r\n                return { ...state, cartItems: [...state.cartItems, item] };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n\r\n            return {...state, cartItems: state.cartItems.filter( (x) => x.product !== action.payload)}\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}